name: CI/CD Pipeline for Laravel-ReactJS # 워크플로우 이름 변경 (선택사항)

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때마다 실행

jobs:
  deploy: # Job ID
    name: Deploy Laravel-ReactJS to Production # Job 이름
    runs-on: self-hosted  # 자체 호스팅 러너에서 실행하도록 지정

    # steps 키는 jobs > deploy 아래에 위치해야 합니다.
    steps:
      # 1. 저장소 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4 # 최신 버전 사용 권장

      # 2. SSH 설정 (수정됨): 임시 키 파일 사용
      # 참고: 키 설정 전에 SSH를 사용하는 단계가 있다면 순서 조정 필요
      - name: Set up SSH key for workflow
        run: |
          mkdir -p ~/.ssh
          # 임시 파일 이름 사용 (예: deploy_key_laravel)
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key_laravel
          # chmod 대상을 새 파일 이름으로 변경
          chmod 600 ~/.ssh/deploy_key_laravel
          # ssh-keyscan 또는 StrictHostKeyChecking=no 사용
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # 3. 업데이트 시간 기록 (SSH 설정 이후로 순서 변경 권장)
      - name: Record deployment timestamp to file
        run: |
          DEPLOYMENT_TIME=$(date '+%Y-%m-%d %H:%M:%S')
          # -i 옵션 및 수정된 키 파일 사용, StrictHostKeyChecking=no 제거 또는 유지
          ssh -i ~/.ssh/deploy_key_laravel -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "echo '$DEPLOYMENT_TIME' > ~/laravel/html/storage/deployment_time.txt"

      # 4. 배포 스크립트 실행 (수정됨): ssh -i 옵션 추가
      - name: Pull latest code and deploy on server
        run: |
          # -i 옵션으로 사용할 임시 키 파일 지정
          ssh -i ~/.ssh/deploy_key_laravel -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "cd ~/laravel/html && ./deploy.sh"
          # !!! deploy.sh 스크립트 경로 및 내용 확인 !!!
